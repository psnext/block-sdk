{"version":3,"file":"block-sdk.umd.cjs","sources":["../node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-browser/rng.js","../node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-browser/native.js","../node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-browser/v4.js","../src/constants.ts","../src/resize-observer.ts","../src/utils.ts","../src/sdk.ts","../src/index.ts"],"sourcesContent":["import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}","var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;","export const EVENT_NAMES = {\n  OUTPUT: \"output-event\",\n  INCOME: \"input-event\",\n  CONTROLLER: \"controller-event\",\n  HOST_DATA: \"host-data-event\",\n  ALX: \"alx-event\",\n};\n\nexport const IFRAME_BLOCK_ID_PREFIX = \"iframe:\";\n\nexport const BLOCK_URL_PARAMS = {\n  BLOCK_ID: \"block-id\",\n};\n\nexport const ALX_EVENT_ID = \"ALX\";\n\nexport const ALX_EVENT_TYPE = {\n  UPDATE_MESSAGE: \"UPDATE_MESSAGE\",\n  DISPLAY_MESSAGE: \"DISPLAY_MESSAGE\",\n};\n\nexport const CONTROLLER_TYPE = {\n  RESIZE: \"resize\",\n  READY: \"ready\",\n};\n","import BlockSdk from \"./sdk\";\nimport { CONTROLLER_TYPE } from \"./constants\";\n\nexport function domResizeObserver(el: HTMLDivElement, blockSdk: BlockSdk) {\n  const observer = new ResizeObserver(() => {\n    if (el) {\n      const { width, height } = el.getBoundingClientRect();\n      blockSdk.sendControllerMessage(\n        {\n          data: {\n            width,\n            height,\n          },\n        },\n        CONTROLLER_TYPE.RESIZE\n      );\n    }\n  });\n\n  if (el) {\n    observer.observe(el);\n  }\n}\n","import { v4 as uuidv4 } from \"uuid\";\nimport { EventName, AnyObj } from \"./types\";\nimport { domResizeObserver } from \"./resize-observer\";\n\nfunction isInIframe() {\n  return window.self !== window.top;\n}\n\ntype MessageToHost = {\n  senderBlockId: string;\n  type: EventName;\n  namespace?: string;\n  blockName: string;\n  source?: AnyObj;\n  payload?: AnyObj;\n  eventData?: AnyObj;\n};\n\nfunction sendMessageToHost(config: MessageToHost) {\n  const uuid = uuidv4();\n  const timestamp = Date.now();\n  window.parent.postMessage(\n    {\n      senderBlockId: config.senderBlockId,\n      type: config.type,\n      namespace: config.namespace || \"\",\n      eventData: {\n        version: 2,\n        eventId: uuid,\n        timestamp: timestamp,\n        playId: \"\",\n        source: {\n          blockId: config.senderBlockId,\n          blockName: config.blockName,\n          ...config.source,\n        },\n        payload: {\n          ...config.payload,\n          lastUpdatedTimestamp: timestamp,\n        },\n        ...config.eventData,\n      },\n    },\n    \"*\"\n  );\n}\n\nconst getUrlParams = (key: string) => {\n  const params = new URLSearchParams(window.location.search);\n  const value = params.get(key);\n  return value;\n};\n\nexport default {\n  isInIframe,\n  sendMessageToHost,\n  getUrlParams,\n  domResizeObserver,\n};\n","import Utils from \"./utils\";\nimport { BlockEventCallbacks, HostData } from \"./types\";\nimport {\n  ALX_EVENT_ID,\n  BLOCK_URL_PARAMS,\n  EVENT_NAMES,\n  ALX_EVENT_TYPE,\n  CONTROLLER_TYPE,\n} from \"./constants\";\n\nexport default class BlockSdk {\n  public blockName: string;\n  public blockEventCallbacks: BlockEventCallbacks;\n  public blockId: string = \"\";\n  public hostData: HostData = {};\n  constructor(blockName: string, blockEventCallbacks: BlockEventCallbacks) {\n    this.blockName = blockName;\n    this.blockEventCallbacks = blockEventCallbacks;\n    this._setupDefaultParams();\n    this._setupWindowEvents();\n  }\n  private _setupDefaultParams() {\n    const blockId = Utils.getUrlParams(BLOCK_URL_PARAMS.BLOCK_ID);\n    if (!blockId) {\n      throw new Error(\"Not a valid block iframe\");\n    }\n    if (blockId) {\n      this.blockId = blockId;\n    }\n  }\n  private _onPostMessageReceived(event: MessageEvent) {\n    if (event.data?.receivingBlockId === this.blockId) {\n      if (event.data?.type === EVENT_NAMES.INCOME) {\n        this.blockEventCallbacks.onIncomingData &&\n          this.blockEventCallbacks.onIncomingData(\n            event.data,\n            event.data.eventData\n          );\n      } else if (event.data?.type === EVENT_NAMES.CONTROLLER) {\n        this.blockEventCallbacks.onControllerData &&\n          this.blockEventCallbacks.onControllerData(\n            event.data,\n            event.data.eventData\n          );\n      } else if (event.data?.type === EVENT_NAMES.ALX) {\n        this.blockEventCallbacks.onAlxData &&\n          this.blockEventCallbacks.onAlxData(event.data, event.data.eventData);\n      } else if (event.data?.type === EVENT_NAMES.HOST_DATA) {\n        this.hostData = {\n          ...this.hostData,\n          ...event.data.eventData.payload,\n        };\n        this.blockEventCallbacks.onHostDataUpdate &&\n          this.blockEventCallbacks.onHostDataUpdate(event.data, this.hostData);\n      }\n    }\n  }\n  private _setupWindowEvents() {\n    window.addEventListener(\"message\", this._onPostMessageReceived.bind(this));\n  }\n  public static Utils = {\n    ...Utils,\n  };\n  public static register(\n    blockName: string,\n    blockEventCallbacks: BlockEventCallbacks\n  ) {\n    const instance = new BlockSdk(blockName, blockEventCallbacks);\n    instance.sendControllerMessage(null, CONTROLLER_TYPE.READY);\n    return instance;\n  }\n  public sendOutput(outputHandlerId: string, data: any) {\n    Utils.sendMessageToHost({\n      senderBlockId: this.blockId,\n      type: EVENT_NAMES.OUTPUT,\n      namespace: `${this.blockId}-${outputHandlerId}`,\n      blockName: this.blockName,\n      source: {\n        handleId: outputHandlerId,\n      },\n      payload: {\n        data,\n      },\n    });\n  }\n  public sendAlxMessage(\n    message: string,\n    type = ALX_EVENT_TYPE.DISPLAY_MESSAGE\n  ) {\n    Utils.sendMessageToHost({\n      senderBlockId: this.blockId,\n      type: EVENT_NAMES.ALX,\n      namespace: ALX_EVENT_ID,\n      blockName: this.blockName,\n      payload: {\n        data: message,\n      },\n      eventData: {\n        alxEventType: type,\n      },\n    });\n  }\n  public resizeObserver(el: HTMLDivElement) {\n    Utils.domResizeObserver(el, this);\n  }\n  public sendControllerMessage(data: any, controllerType: string) {\n    Utils.sendMessageToHost({\n      senderBlockId: this.blockId,\n      type: EVENT_NAMES.CONTROLLER,\n      blockName: this.blockName,\n      payload: {\n        ...data,\n      },\n      eventData: {\n        controllerType,\n      },\n    });\n  }\n}\n","import BlockSdk from \"./sdk\";\n\n(function (Module) {\n  Module.BlockSdk = BlockSdk;\n})(window);\n"],"names":["byteToHex","i","unsafeStringify","arr","offset","getRandomValues","rnds8","rng","randomUUID","native","v4","options","buf","rnds","EVENT_NAMES","BLOCK_URL_PARAMS","ALX_EVENT_ID","ALX_EVENT_TYPE","CONTROLLER_TYPE","domResizeObserver","el","blockSdk","observer","width","height","isInIframe","sendMessageToHost","config","uuid","uuidv4","timestamp","Utils","key","_BlockSdk","blockName","blockEventCallbacks","__publicField","blockId","event","_a","_b","_c","_d","_e","instance","outputHandlerId","data","message","type","controllerType","BlockSdk","Module"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}